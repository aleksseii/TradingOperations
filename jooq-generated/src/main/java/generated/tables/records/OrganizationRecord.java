/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Organization;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrganizationRecord extends UpdatableRecordImpl<OrganizationRecord> implements Record4<Integer, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.organization.org_id</code>.
     */
    public OrganizationRecord setOrgId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.organization.org_id</code>.
     */
    public Integer getOrgId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.organization.inn</code>.
     */
    public OrganizationRecord setInn(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.organization.inn</code>.
     */
    public Long getInn() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.organization.name</code>.
     */
    public OrganizationRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.organization.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.organization.bank_account</code>.
     */
    public OrganizationRecord setBankAccount(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.organization.bank_account</code>.
     */
    public String getBankAccount() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Long, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Organization.ORGANIZATION.ORG_ID;
    }

    @Override
    public Field<Long> field2() {
        return Organization.ORGANIZATION.INN;
    }

    @Override
    public Field<String> field3() {
        return Organization.ORGANIZATION.NAME;
    }

    @Override
    public Field<String> field4() {
        return Organization.ORGANIZATION.BANK_ACCOUNT;
    }

    @Override
    public Integer component1() {
        return getOrgId();
    }

    @Override
    public Long component2() {
        return getInn();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getBankAccount();
    }

    @Override
    public Integer value1() {
        return getOrgId();
    }

    @Override
    public Long value2() {
        return getInn();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getBankAccount();
    }

    @Override
    public OrganizationRecord value1(Integer value) {
        setOrgId(value);
        return this;
    }

    @Override
    public OrganizationRecord value2(Long value) {
        setInn(value);
        return this;
    }

    @Override
    public OrganizationRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public OrganizationRecord value4(String value) {
        setBankAccount(value);
        return this;
    }

    @Override
    public OrganizationRecord values(Integer value1, Long value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrganizationRecord
     */
    public OrganizationRecord() {
        super(Organization.ORGANIZATION);
    }

    /**
     * Create a detached, initialised OrganizationRecord
     */
    public OrganizationRecord(Integer orgId, Long inn, String name, String bankAccount) {
        super(Organization.ORGANIZATION);

        setOrgId(orgId);
        setInn(inn);
        setName(name);
        setBankAccount(bankAccount);
    }

    /**
     * Create a detached, initialised OrganizationRecord
     */
    public OrganizationRecord(generated.tables.pojos.Organization value) {
        super(Organization.ORGANIZATION);

        if (value != null) {
            setOrgId(value.getOrgId());
            setInn(value.getInn());
            setName(value.getName());
            setBankAccount(value.getBankAccount());
        }
    }
}
